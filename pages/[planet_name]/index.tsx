import Head from "next/head";
import styles from "../../styles/Home.module.scss";
import { Header, Planet, PlanetDetails } from "../../components";

import { GetServerSideProps, NextPage } from "next";

import data from "../../data.json";
import TypePlanet from "../../model/Planet";

interface Props {
    readonly planet: TypePlanet;
    readonly planet_name: string;
}

// How to get the query with NextJS - https://nextjs.org/docs/routing/dynamic-routes
const PlanetPage: NextPage<Props> = props => {
    const { planet, planet_name } = props;

    return (
        <div className={styles.main_container}>
            <Head>
                <title>
                    Frontend Mentor | Planets fact site |{planet.name}
                </title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/assets/favicon-32x32.png" />
            </Head>
            <Header />
            <Planet
                planet={planet}
                info="overview"
                image="planet"
                planetName={planet_name}
            />
            <PlanetDetails planet={planet} />
        </div>
    );
};

// https://nextjs.org/docs/basic-features/data-fetching/overview
// https://nextjs.org/docs/basic-features/data-fetching/get-server-side-props
export const getServerSideProps: GetServerSideProps = async context => {
    const { planet_name } = context.query;

    // planet_name is a route paramater and will always be a string, so it's safe to use 'as string'
    const planet = data[planet_name as string] as TypePlanet;

    if (typeof planet === "undefined") {
        return { notFound: true };
    }

    return {
        props: { planet, planet_name }
    };
};

export default PlanetPage;
