import Head from "next/head";
import { Header, Planet, PlanetDetails } from "components";
import styles from "../styles/Home.module.scss";
import { GetServerSideProps, NextPage } from "next";

import data from "../data.json";
import TypePlanet from "../model/Planet";

interface Props {
    readonly planet: TypePlanet;
}

// How to get the query with NextJS - https://nextjs.org/docs/routing/dynamic-routes
const PlanetPage: NextPage<Props> = props => {
    const { planet } = props;

    return (
        <>
            <Head>
                <title>
                    Frontend Mentor | Planets fact site |{planet.name}
                </title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/assets/favicon-32x32.png" />
            </Head>
            <Header />
            <div className={styles.main_container}>
                <Planet planet={planet} />
                <PlanetDetails planet={planet} />
            </div>
        </>
    );
};

// https://nextjs.org/docs/basic-features/data-fetching/overview
// https://nextjs.org/docs/basic-features/data-fetching/get-server-side-props
export const getServerSideProps: GetServerSideProps = async context => {
    const { planet_name } = context.query;

    // planet_name is a route paramater and will always be a string, so it's safe to use 'as string'
    const planet = data[planet_name as string] as TypePlanet;

    if (typeof planet === "undefined") {
        return { notFound: true };
    }

    return { props: { planet } };
};

export default PlanetPage;
